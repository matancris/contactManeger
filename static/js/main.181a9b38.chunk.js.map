{"version":3,"sources":["cmps/ContactFilter.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","services/storageService.js","services/utilService.js","services/contactService.js","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["ContactFilter","onSetFilter","handleChange","target","status","value","className","htmlFor","type","name","id","onChange","ContactPreview","contact","onSendMsg","onDeleteContact","onAddInfo","idx","draggableId","index","provided","ref","innerRef","draggableProps","dragHandleProps","num","suppressContentEditableWarning","contentEditable","onInput","ev","info","onClick","ContactList","contacts","onDragEnd","console","log","droppableId","droppableProps","map","placeholder","storageService","saveToStorage","key","val","localStorage","setItem","JSON","stringify","loadFromStorage","getItem","parse","clearStorage","clear","utilService","makeId","length","text","possible","i","charAt","Math","floor","random","CONTACT_KEY","contactService","addContact","gContacts","push","_saveToStorage","_saveContact","getContacts","filter","sendMsg","url","res","valiNum","split","char","join","encodeURI","setContactStatus","window","open","remove","contactId","findIndex","removedContact","splice","addInfo","txt","_getIdxById","updateContactIdx","newIdx","PrevIdx","contactArr","newStatus","Home","useState","setContacts","setContact","zoomUrl","setZoomUrl","setFilter","useEffect","loadContacts","onInputChange","useCallback","destination","source","prevIdx","onSubmit","preventDefault","onAddContact","location","reload","currContact","textContent","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.181a9b38.chunk.js","sourcesContent":["\r\nexport function ContactFilter({ onSetFilter }) {\r\n\r\n    const handleChange = ({ target }) => {\r\n        onSetFilter({ status: target.value })\r\n    }\r\n\r\n    return (\r\n        <form className=\"contact-filter\">\r\n            <label htmlFor=\"all\">\r\n            <input type=\"radio\" name=\"status\" id=\"all\" value=\"\" onChange={handleChange} />\r\n            all\r\n            </label>\r\n            <label htmlFor=\"first\">\r\n            <input type=\"radio\" name=\"status\" id=\"first\" value=\"first-step\" onChange={handleChange} />\r\n            checked\r\n            </label>\r\n            <label htmlFor=\"second\">\r\n            <input type=\"radio\" name=\"status\" id=\"second\" value=\"second-step\" onChange={handleChange} />\r\n            invited\r\n            </label>\r\n            <label htmlFor=\"third\">\r\n            <input type=\"radio\" name=\"status\" id=\"third\" value=\"third-step\" onChange={handleChange} />\r\n            finished process\r\n            </label>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nexport function ContactPreview({ contact, onSendMsg, onDeleteContact, onAddInfo, idx }) {\r\n\r\n\r\n    return (\r\n        <Draggable draggableId={contact.id} index={idx}>\r\n            {provided => (\r\n                <li className={`contact-preview flex space-between align-center ${contact.status}`}\r\n                ref={provided.innerRef}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}>\r\n                    <h1>{contact.name} - {contact.num}</h1>\r\n                    <p suppressContentEditableWarning={true} contentEditable onInput={(ev) => onAddInfo(ev, contact.id)}>{contact.info}</p>\r\n                    <section className=\"contact-actions flex\">\r\n                        <div className=\"contact-action-wrapper\">\r\n                            <button onClick={() => onSendMsg(contact, 'first-step')}>check</button>\r\n                            <button onClick={() => onSendMsg(contact, 'second-step')}>invitation</button>\r\n                        </div>\r\n                        <div className=\"contact-action-wrapper\">\r\n                            <button onClick={() => onSendMsg(contact, 'third-step')}>start</button>\r\n                            <button onClick={() => onDeleteContact(contact.id)}>X</button>\r\n                        </div>\r\n                    </section>\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { ContactPreview } from './ContactPreview'\r\n\r\nexport function ContactList({ contacts, onSendMsg, onDeleteContact, onAddInfo, onDragEnd }) {\r\n    console.log(\"🚀 ~ file: ContactList.jsx ~ line 4 ~ ContactList ~ contacts\", contacts)\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId={'contactList'}>\r\n                {(provided) => (\r\n                    <ul className=\"contact-list clean-list flex column\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}>\r\n\r\n                        {\r\n                            contacts.map((contact, idx) => <ContactPreview key={contact.id}\r\n                                idx={idx}\r\n                                onAddInfo={onAddInfo}\r\n                                contact={contact}\r\n                                onSendMsg={onSendMsg}\r\n                                onDeleteContact={onDeleteContact}\r\n                            ></ContactPreview>)\r\n                        }\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n","\r\nexport const storageService = {\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    clearStorage\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return JSON.parse(val);\r\n}\r\n\r\nfunction clearStorage() {\r\n    localStorage.clear()\r\n}\r\n","function makeId(length=3) {\r\n    var text = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for(let i=0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport const utilService = {\r\n    makeId\r\n}","import { storageService } from \"./storageService\";\r\nimport { utilService } from \"./utilService\";\r\n\r\nconst CONTACT_KEY = 'myContacts'\r\n\r\nexport const contactService = {\r\n    addContact,\r\n    getContacts,\r\n    sendMsg,\r\n    setContactStatus,\r\n    remove,\r\n    addInfo,\r\n    updateContactIdx\r\n}\r\n\r\nvar gContacts = storageService.loadFromStorage(CONTACT_KEY) || []\r\n\r\nfunction getContacts(filter = {}) {\r\n    if (!filter.status) return gContacts;\r\n    const contacts = gContacts.filter(contact => contact.status === filter.status)\r\n    return contacts\r\n}\r\n\r\nfunction addContact(contact) {\r\n    console.log(\"🚀 ~ file: contactService.js ~ line 6 ~ sendMsg ~ num\", contact.num)\r\n    if (!contact.num || contact.num.length < 10) {\r\n        console.log('invalid num');\r\n        return\r\n    };\r\n    _saveContact(contact)\r\n}\r\n\r\nfunction sendMsg(contact, status, url) {\r\n    let valiNum = _getValidNum(contact.num)\r\n    let res;\r\n    switch (status) {\r\n        case 'first-step':\r\n            res = encodeURI(`אהלן ${contact.name}! זה מתן מקודינג אקדמי:) היום ערב ההכרות שלנו! אני אראה אותך שם?`);\r\n            break;\r\n        case 'second-step':\r\n            res = encodeURI(`זה הלינק לערב ההכרות שמתחיל בשעה 18:00:\\n\\n ${url} \\n\\n כדאי להכנס קצת לפני כדי לראות שאין בעיות טכניות. \\n\\n מחכה לראותך!:)`);\r\n            break;\r\n        case 'third-step':\r\n            res = encodeURI(`מתחילים עוד כמה דקות! כדאי להכנס ולראות אם הכל עובד כמו שצריך:)`);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    setContactStatus(contact.id, status)\r\n    window.open(`https://wa.me/972${valiNum}/?text=${res}`)\r\n}\r\n\r\n\r\nfunction setContactStatus(contactId, newStatus) {\r\n    const idx = _getIdxById(contactId)\r\n    gContacts[idx].status = newStatus\r\n    _saveToStorage()\r\n}\r\n\r\nfunction addInfo(txt, contactId) {\r\n    const idx = _getIdxById(contactId)\r\n    gContacts[idx].info = txt\r\n    _saveToStorage()\r\n}\r\n\r\nfunction remove(contactId) {\r\n    const idx = gContacts.findIndex(contact => contact.id === contactId)\r\n    const removedContact = gContacts.splice(idx, 1)\r\n    _saveToStorage()\r\n    return removedContact\r\n}\r\n\r\nfunction updateContactIdx(newIdx, PrevIdx) {\r\n    const contactArr = gContacts.splice(PrevIdx, 1)\r\n    gContacts.splice(newIdx, 0, contactArr[0])\r\n    _saveToStorage()\r\n}\r\n\r\n\r\n// Local Functions\r\n\r\nfunction _getValidNum(num) {\r\n    return num.split('').filter((char) => char !== '-').join('')\r\n}\r\n\r\nfunction _getIdxById(id) {\r\n    return gContacts.findIndex(contact => contact.id === id)\r\n}\r\n\r\nfunction _saveContact(contact) {\r\n    contact.id = utilService.makeId()\r\n    gContacts.push(contact)\r\n    _saveToStorage()\r\n}\r\n\r\nfunction _saveToStorage() {\r\n    storageService.saveToStorage(CONTACT_KEY, gContacts)\r\n}\r\n\r\n\r\n\r\n// DEPRECAED\r\n\r\n\r\n// function sendCheckMsg(contact) {\r\n//     let valiNum = _getValidNum(contact.num)\r\n//     let res = encodeURI(`אהלן ${contact.name}! זה מתן מקודינג אקדמי:) היום ערב ההכרות שלנו! את/ה מגיע/ה?`); \r\n//     window.open(`https://wa.me/972${valiNum}/?text=${res}`)\r\n// }\r\n\r\n// function sendInvitation(url , num) {\r\n//     let valiNum = _getValidNum(num)\r\n//     let res = encodeURI(`זה הלינק לערב ההכרות שמתחיל בשעה 18:00:\\n\\n ${url} \\n\\n כדאי להכנס קצת לפני כדי לראות שאין בעיות טכניות. \\n\\n מחכה לראותך!:)`); \r\n//     window.open(`https://wa.me/972${valiNum}/?text=${res}`)\r\n// }\r\n\r\n// function sendStartMsg(num) {\r\n//     let valiNum = _getValidNum(num)\r\n//     let res = encodeURI(`מתחילים עוד כמה דקות! כדאי להכנס ולראות אם הכל עובד כמו שצריך:)`); \r\n//     window.open(`https://wa.me/972${valiNum}/?text=${res}`)\r\n// }","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { ContactFilter } from '../cmps/ContactFilter'\r\nimport { ContactList } from '../cmps/ContactList'\r\nimport { contactService } from '../services/contactService'\r\nimport { storageService } from '../services/storageService'\r\n\r\nexport function Home() {\r\n\r\n    const [contacts, setContacts] = useState([])\r\n    const [contact, setContact] = useState({ name: '', num: '', status: '', info: '' })\r\n    const [zoomUrl, setZoomUrl] = useState('')\r\n    const [filter, setFilter] = useState({ status: '' })\r\n\r\n    useEffect(() => {\r\n        loadContacts()\r\n    }, [contact, filter])\r\n\r\n    const loadContacts = () => {\r\n        console.log(\"filter:\", filter);\r\n        const contacts = contactService.getContacts(filter)\r\n        setContacts([...contacts])\r\n    }\r\n\r\n    const onAddContact = (ev) => {\r\n        ev.preventDefault();\r\n        console.log(contact);\r\n        contactService.addContact(contact)\r\n        setContact({ name: '', num: '' })\r\n    }\r\n\r\n    const onInputChange = (ev) => {\r\n        setContact({\r\n            ...contact, [ev.target.name]: ev.target.value\r\n        })\r\n    }\r\n\r\n    const onSendMsg = (currContact, status) => {\r\n        contactService.sendMsg(currContact, status, zoomUrl)\r\n        loadContacts()\r\n    }\r\n\r\n    const onDeleteContact = (contactId) => {\r\n        contactService.remove(contactId)\r\n        loadContacts()\r\n    }\r\n\r\n    function onClearStorage() {\r\n        storageService.clearStorage()\r\n        window.location.reload();\r\n    }\r\n\r\n    const onSetZoomUrl = (ev) => {\r\n        setZoomUrl(ev.target.value)\r\n    }\r\n\r\n    const onAddInfo = (ev, contactId) => {\r\n        const txt = ev.target.textContent\r\n        console.log(ev.target.textContent, contactId);\r\n        contactService.addInfo(txt, contactId)\r\n    }\r\n\r\n    const onSetFilter = (filter) => {\r\n    console.log(\"🚀 ~ file: Home.jsx ~ line 63 ~ onSetFilter ~ filter\", filter)\r\n        setFilter(filter)\r\n    }\r\n\r\n    const onDragEnd = useCallback((res) => {\r\n        // the only one that is required\r\n        const { destination, source, draggableId } = res;\r\n        const newIdx = destination.index\r\n        const prevIdx = source.index\r\n        contactService.updateContactIdx(newIdx , prevIdx)\r\n        console.log(res);\r\n        loadContacts()\r\n      }, []);\r\n    \r\n\r\n    return (\r\n        <section className=\"homepage\">\r\n            <h1>Contacts-Manager</h1>\r\n            <h2>on the list now: {contacts.length}</h2>\r\n            <form className=\"main-form\" onSubmit={(ev) => onAddContact(ev)}>\r\n                <input type=\"text\" onChange={onInputChange} name=\"num\" value={contact.num} placeholder=\"num\" />\r\n                <input type=\"text\" onChange={onInputChange} name=\"name\" value={contact.name} placeholder=\"name\" />\r\n                <button>add</button>\r\n            </form>\r\n            <input type=\"text\" placeholder=\"ZOOM url\" onChange={onSetZoomUrl} />\r\n            <button className=\"clear-btn\" onClick={() => onClearStorage()}>clear storage</button>\r\n            <ContactFilter onSetFilter={onSetFilter}/>\r\n            <ContactList contacts={contacts} onDragEnd={onDragEnd} onSendMsg={onSendMsg} onDeleteContact={onDeleteContact} onAddInfo={onAddInfo}/>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Home } from './pages/Home';\n\nfunction App() {\n  return (\n    <section className=\"App\">\n      <Home/>\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}