{"version":3,"sources":["cmps/AppHeader.jsx","services/storageService.js","services/msgService.js","pages/EditMsgs.jsx","cmps/lead/LeadFilter.jsx","cmps/lead/LeadPreview.jsx","cmps/lead/LeadList.jsx","services/utilService.js","services/leadService.js","pages/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["AppHeader","className","to","storageService","saveToStorage","key","val","localStorage","setItem","JSON","stringify","loadFromStorage","getItem","parse","clearStorage","clear","MSG_KEY","msgService","getMsgTemplate","gTemplate","setMsgTemplate","template","console","log","createMsg","type","data","replace","check","invitation","start","EditMsgs","useState","msgsTemplate","setMsgsTemplate","useEffect","onSetTemplate","target","name","value","htmlFor","id","cols","rows","onChange","LeadFilter","onSetFilter","handleChange","status","LeadPreview","lead","onSendMsg","onDeleteLead","onAddInfo","idx","draggableId","index","provided","ref","innerRef","draggableProps","dragHandleProps","num","suppressContentEditableWarning","contentEditable","onInput","ev","info","onClick","LeadList","leads","onDragEnd","droppableId","droppableProps","map","placeholder","utilService","makeId","length","text","possible","i","charAt","Math","floor","random","LEAD_KEY","leadService","addLead","gLeads","push","_saveToStorage","_saveLead","getLeads","filter","sendMsg","url","res","valiNum","split","char","join","msg","encodeURI","setLeadStatus","window","open","remove","leadId","findIndex","removedLead","splice","addInfo","txt","_getIdxById","updateLeadIdx","newIdx","PrevIdx","leadArr","newStatus","Home","setLeads","setLead","zoomUrl","setZoomUrl","setFilter","loadLeads","onInputChange","useCallback","destination","source","prevIdx","onSubmit","preventDefault","onAddLead","location","reload","currLead","textContent","App","component","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2c3f510c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function AppHeader() {\r\n    return (\r\n        <section className=\"app-header flex justify-center\">\r\n            <Link to='/'>home</Link>| \r\n            <Link to='/editMsg'>edit messeges</Link>\r\n        </section>\r\n    )\r\n}\r\n","\r\nexport const storageService = {\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    clearStorage\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return JSON.parse(val);\r\n}\r\n\r\nfunction clearStorage() {\r\n    localStorage.clear()\r\n}\r\n","import { storageService } from \"./storageService\";\r\n\r\nconst MSG_KEY = 'myMsgs'\r\n\r\nexport const msgService = {\r\n    getMsgTemplate,\r\n    setMsgTemplate,\r\n    createMsg\r\n}\r\n\r\nlet gTemplate = storageService.loadFromStorage(MSG_KEY) || {\r\n    check:  `אהלן {{data}}! זה מתן מקודינג אקדמי:) היום ערב ההכרות שלנו! אני אראה אותך שם?`,\r\n    invitation: `זה הלינק לערב ההכרות שמתחיל בשעה 18:00:\\n\\n {{data}} \\n\\n כדאי להכנס קצת לפני כדי לראות שאין בעיות טכניות. \\n\\n מחכה לראותך!:)`,\r\n    start: `מתחילים עוד כמה דקות! כדאי להכנס ולראות אם הכל עובד כמו שצריך:)`\r\n}\r\n\r\nfunction getMsgTemplate() {\r\n    return gTemplate;\r\n}\r\n\r\nfunction createMsg(type, data) {\r\n    return gTemplate[type].replace('{{data}}', data)\r\n}\r\n\r\nfunction setMsgTemplate(template) {\r\n    console.log(\"🚀 ~ file: msgService.js ~ line 23 ~ setMsgTemplate ~ template\", template)\r\n    gTemplate = template\r\n    _saveToStorage()\r\n}\r\n\r\n\r\n// LOCAL FUNCTIONS\r\nfunction _saveToStorage() {\r\n    storageService.saveToStorage(MSG_KEY, gTemplate)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { msgService } from '../services/msgService'\r\n\r\nexport default function EditMsgs() {\r\n    const [msgsTemplate, setMsgsTemplate] = useState({ check: '', invitation: '', start: '' })\r\n\r\n    useEffect(() => {\r\n        const template = msgService.getMsgTemplate()\r\n        setMsgsTemplate(template)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        msgService.setMsgTemplate(msgsTemplate)\r\n    }, [msgsTemplate])\r\n\r\n    const onSetTemplate = ({ target }) => {\r\n        const { name, value } = target\r\n        setMsgsTemplate({\r\n            ...msgsTemplate,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <section className=\"edit-msg flex column space-between align-center\">\r\n            <h1>Edit Messeges</h1>\r\n            <label htmlFor=\"edit-check\">check</label>\r\n            <textarea name=\"check\" id=\"edit-check\" cols=\"20\" rows=\"10\" onChange={onSetTemplate} value={msgsTemplate.check}></textarea>\r\n            <label htmlFor=\"edit-invitation\">invitation</label>\r\n            <textarea name=\"invitation\" id=\"edit-invitation\" cols=\"230\" rows=\"10\" onChange={onSetTemplate} value={msgsTemplate.invitation}></textarea>\r\n            <label htmlFor=\"edit-start\">start</label>\r\n            <textarea name=\"start\" id=\"edit-start\" cols=\"20\" rows=\"10\" onChange={onSetTemplate} value={msgsTemplate.start}></textarea>\r\n        </section>\r\n    )\r\n}\r\n","\r\nexport function LeadFilter({ onSetFilter }) {\r\n\r\n    const handleChange = ({ target }) => {\r\n        onSetFilter({ status: target.value })\r\n    }\r\n\r\n    return (\r\n        <form className=\"lead-filter\">\r\n            <label htmlFor=\"all\">\r\n            <input type=\"radio\" name=\"status\" id=\"all\" value=\"\" onChange={handleChange} />\r\n            all\r\n            </label>\r\n            <label htmlFor=\"first\">\r\n            <input type=\"radio\" name=\"status\" id=\"first\" value=\"first-step\" onChange={handleChange} />\r\n            checked\r\n            </label>\r\n            <label htmlFor=\"second\">\r\n            <input type=\"radio\" name=\"status\" id=\"second\" value=\"second-step\" onChange={handleChange} />\r\n            invited\r\n            </label>\r\n            <label htmlFor=\"third\">\r\n            <input type=\"radio\" name=\"status\" id=\"third\" value=\"third-step\" onChange={handleChange} />\r\n            finished process\r\n            </label>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nexport function LeadPreview({ lead, onSendMsg, onDeleteLead, onAddInfo, idx }) {\r\n\r\n\r\n    return (\r\n        <Draggable draggableId={lead.id} index={idx}>\r\n            {provided => (\r\n                <li className={`lead-preview flex space-between align-center ${lead.status}`}\r\n                ref={provided.innerRef}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}>\r\n                    <h1 className=\"flex\">{lead.name} - {lead.num}</h1>\r\n                    <p suppressContentEditableWarning={true} contentEditable onInput={(ev) => onAddInfo(ev, lead.id)}>{lead.info}</p>\r\n                    <section className=\"lead-actions flex\">\r\n                        <div className=\"lead-action-wrapper\">\r\n                            <button onClick={() => onSendMsg(lead, 'first-step')}>check</button>\r\n                            <button onClick={() => onSendMsg(lead, 'second-step')}>invitation</button>\r\n                        </div>\r\n                        <div className=\"lead-action-wrapper\">\r\n                            <button onClick={() => onSendMsg(lead, 'third-step')}>start</button>\r\n                            <button onClick={() => onDeleteLead(lead.id)}>X</button>\r\n                        </div>\r\n                    </section>\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { LeadPreview } from './LeadPreview'\r\n\r\nexport function LeadList({ leads, onSendMsg, onDeleteLead, onAddInfo, onDragEnd }) {\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId={'leadList'}>\r\n                {(provided) => (\r\n                    <ul className=\"lead-list clean-list flex column\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}>\r\n\r\n                        {\r\n                            leads.map((lead, idx) => <LeadPreview key={lead.id}\r\n                                idx={idx}\r\n                                onAddInfo={onAddInfo}\r\n                                lead={lead}\r\n                                onSendMsg={onSendMsg}\r\n                                onDeleteLead={onDeleteLead}\r\n                            ></LeadPreview>)\r\n                        }\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n","function makeId(length=3) {\r\n    var text = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for(let i=0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport const utilService = {\r\n    makeId\r\n}","import { msgService } from \"./msgService\";\r\nimport { storageService } from \"./storageService\";\r\nimport { utilService } from \"./utilService\";\r\n\r\nconst LEAD_KEY = 'myLeads'\r\n\r\nexport const leadService = {\r\n    addLead,\r\n    getLeads,\r\n    sendMsg,\r\n    setLeadStatus,\r\n    remove,\r\n    addInfo,\r\n    updateLeadIdx\r\n}\r\n\r\nvar gLeads = storageService.loadFromStorage(LEAD_KEY) || []\r\n\r\nfunction getLeads(filter = {}) {\r\n    if (!filter.status) return gLeads;\r\n    const leads = gLeads.filter(lead => lead.status === filter.status)\r\n    return leads\r\n}\r\n\r\nfunction addLead(lead) {\r\n    console.log(\"🚀 ~ file: leadService.js ~ line 6 ~ sendMsg ~ num\", lead.num)\r\n    if (!lead.num || lead.num.length < 10) {\r\n        console.log('invalid num');\r\n        return\r\n    };\r\n    _saveLead(lead)\r\n}\r\n\r\nfunction sendMsg(lead, status, url) {\r\n    let valiNum = _getValidNum(lead.num)\r\n    let res;\r\n    switch (status) {\r\n        case 'first-step': {\r\n            const msg = msgService.createMsg('check', lead.name)\r\n            res = encodeURI(msg);\r\n            break;\r\n        }\r\n        case 'second-step': {\r\n            const msg = msgService.createMsg('invitation', url)\r\n            res = encodeURI(msg);\r\n            break;\r\n        }\r\n        case 'third-step':{\r\n            const msg = msgService.createMsg('start')\r\n            res = encodeURI(msg);\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n    setLeadStatus(lead.id, status)\r\n    window.open(`https://wa.me/972${valiNum}/?text=${res}`)\r\n}\r\n\r\n\r\nfunction setLeadStatus(leadId, newStatus) {\r\n    const idx = _getIdxById(leadId)\r\n    gLeads[idx].status = newStatus\r\n    _saveToStorage()\r\n}\r\n\r\nfunction addInfo(txt, leadId) {\r\n    const idx = _getIdxById(leadId)\r\n    gLeads[idx].info = txt\r\n    _saveToStorage()\r\n}\r\n\r\nfunction remove(leadId) {\r\n    const idx = gLeads.findIndex(lead => lead.id === leadId)\r\n    const removedLead = gLeads.splice(idx, 1)\r\n    _saveToStorage()\r\n    return removedLead\r\n}\r\n\r\nfunction updateLeadIdx(newIdx, PrevIdx) {\r\n    const leadArr = gLeads.splice(PrevIdx, 1)\r\n    gLeads.splice(newIdx, 0, leadArr[0])\r\n    _saveToStorage()\r\n}\r\n\r\n\r\n// Local Functions\r\n\r\nfunction _getValidNum(num) {\r\n    return num.split('').filter((char) => char !== '-').join('')\r\n}\r\n\r\nfunction _getIdxById(id) {\r\n    return gLeads.findIndex(lead => lead.id === id)\r\n}\r\n\r\nfunction _saveLead(lead) {\r\n    lead.id = utilService.makeId()\r\n    gLeads.push(lead)\r\n    _saveToStorage()\r\n}\r\n\r\nfunction _saveToStorage() {\r\n    storageService.saveToStorage(LEAD_KEY, gLeads)\r\n}\r\n\r\n\r\n\r\n// DEPRECATED\r\n\r\n\r\n// function sendCheckMsg(lead) {\r\n//     let valiNum = _getValidNum(lead.num)\r\n//     let res = encodeURI(`אהלן ${lead.name}! זה מתן מקודינג אקדמי:) היום ערב ההכרות שלנו! את/ה מגיע/ה?`); \r\n//     window.open(`https://wa.me/972${valiNum}/?text=${res}`)\r\n// }\r\n\r\n// function sendInvitation(url , num) {\r\n//     let valiNum = _getValidNum(num)\r\n//     let res = encodeURI(`זה הלינק לערב ההכרות שמתחיל בשעה 18:00:\\n\\n ${url} \\n\\n כדאי להכנס קצת לפני כדי לראות שאין בעיות טכניות. \\n\\n מחכה לראותך!:)`); \r\n//     window.open(`https://wa.me/972${valiNum}/?text=${res}`)\r\n// }\r\n\r\n// function sendStartMsg(num) {\r\n//     let valiNum = _getValidNum(num)\r\n//     let res = encodeURI(`מתחילים עוד כמה דקות! כדאי להכנס ולראות אם הכל עובד כמו שצריך:)`); \r\n//     window.open(`https://wa.me/972${valiNum}/?text=${res}`)\r\n// }","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { LeadFilter } from '../cmps/lead/LeadFilter'\r\nimport { LeadList } from '../cmps/lead/LeadList'\r\nimport { leadService } from '../services/leadService'\r\nimport { storageService } from '../services/storageService'\r\n\r\nexport function Home() {\r\n\r\n    const [leads, setLeads] = useState([])\r\n    const [lead, setLead] = useState({ name: '', num: '', status: '', info: '' })\r\n    const [zoomUrl, setZoomUrl] = useState('')\r\n    const [filter, setFilter] = useState({ status: '' })\r\n\r\n    useEffect(() => {\r\n        loadLeads()\r\n    }, [lead, filter])\r\n\r\n    const loadLeads = () => {\r\n        console.log(\"filter:\", filter);\r\n        const leads = leadService.getLeads(filter)\r\n        setLeads([...leads])\r\n    }\r\n\r\n    const onAddLead = (ev) => {\r\n        ev.preventDefault();\r\n        console.log(lead);\r\n        leadService.addLead(lead)\r\n        setLead({ name: '', num: '' })\r\n    }\r\n\r\n    const onInputChange = (ev) => {\r\n        setLead({\r\n            ...lead, [ev.target.name]: ev.target.value\r\n        })\r\n    }\r\n\r\n    const onSendMsg = (currLead, status) => {\r\n        leadService.sendMsg(currLead, status, zoomUrl)\r\n        loadLeads()\r\n    }\r\n\r\n    const onDeleteLead = (leadId) => {\r\n        leadService.remove(leadId)\r\n        loadLeads()\r\n    }\r\n\r\n    function onClearStorage() {\r\n        storageService.saveToStorage('myLeads', null)\r\n        window.location.reload();\r\n    }\r\n\r\n    const onSetZoomUrl = (ev) => {\r\n        setZoomUrl(ev.target.value)\r\n    }\r\n\r\n    const onAddInfo = (ev, leadId) => {\r\n        const txt = ev.target.textContent\r\n        console.log(ev.target.textContent, leadId);\r\n        leadService.addInfo(txt, leadId)\r\n    }\r\n\r\n    const onSetFilter = (filter) => {\r\n        console.log(\"🚀 ~ file: Home.jsx ~ line 63 ~ onSetFilter ~ filter\", filter)\r\n        setFilter(filter)\r\n    }\r\n\r\n    const onDragEnd = useCallback((res) => {\r\n        // the only one that is required\r\n        const { destination, source, draggableId } = res;\r\n        if (!destination) return\r\n        const newIdx = destination.index\r\n        const prevIdx = source.index\r\n        leadService.updateLeadIdx(newIdx, prevIdx)\r\n        console.log(res);\r\n        loadLeads()\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <main className=\"homepage\">\r\n            <section className=\"main-section flex column space-between align-center\">\r\n                <h1>Leads-Manager</h1>\r\n                <h2>on the list now: {leads.length}</h2>\r\n                <form className=\"main-form\" onSubmit={(ev) => onAddLead(ev)}>\r\n                    <input type=\"text\" onChange={onInputChange} name=\"num\" value={lead.num} placeholder=\"num\" />\r\n                    <input type=\"text\" onChange={onInputChange} name=\"name\" value={lead.name} placeholder=\"name\" />\r\n                    <button>add</button>\r\n                </form>\r\n                <div className=\"zoom-clear-wrapper\">\r\n                    <input type=\"text\" placeholder=\"ZOOM url\" onChange={onSetZoomUrl} />\r\n                    <button className=\"clear-btn\" onClick={() => onClearStorage()}>clear storage</button>\r\n                </div>\r\n                <LeadFilter onSetFilter={onSetFilter} />\r\n            </section>\r\n            {/* <section className=\"main-container\"> */}\r\n            <LeadList leads={leads} onDragEnd={onDragEnd} onSendMsg={onSendMsg} onDeleteLead={onDeleteLead} onAddInfo={onAddInfo} />\r\n            {/* </section> */}\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AppHeader from './cmps/AppHeader';\nimport EditMsgs from './pages/EditMsgs';\nimport { Home } from './pages/Home';\n\nfunction App() {\n  return (\n    <section className=\"App\">\n      <AppHeader />\n      <main className=\"\">\n        <Switch>\n          <Route component={Home} path='/' exact/>\n          <Route component={EditMsgs} to='/editMsg' />\n        </Switch>\n      </main>\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/global.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}