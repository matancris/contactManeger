{"version":3,"sources":["cmps/AppHeader.jsx","services/storageService.js","services/msgService.js","pages/EditMsgs.jsx","cmps/lead/LeadFilter.jsx","cmps/lead/LeadPreview.jsx","cmps/lead/LeadList.jsx","cmps/lead/LeadSavedList.jsx","services/utilService.js","services/leadService.js","pages/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["AppHeader","className","to","storageService","saveToStorage","key","val","localStorage","setItem","JSON","stringify","loadFromStorage","getItem","parse","clearStorage","clear","MSG_KEY","msgService","getMsgTemplate","gTemplate","setMsgTemplate","template","createMsg","type","data","replace","check","invitation","start","EditMsgs","useState","msgsTemplate","setMsgsTemplate","useEffect","onSetTemplate","target","name","value","htmlFor","id","cols","rows","onChange","LeadFilter","onSetFilter","handleChange","status","LeadPreview","lead","onSendMsg","onDeleteLead","onAddInfo","idx","draggableId","index","provided","ref","innerRef","draggableProps","dragHandleProps","num","suppressContentEditableWarning","contentEditable","onInput","ev","info","onClick","LeadList","leads","onDragEnd","droppableId","droppableProps","map","placeholder","LeadSavedLists","savedLists","setCurrList","isListOpen","setIsListOpen","list","title","utilService","makeId","length","text","possible","i","charAt","Math","floor","random","LEAD_KEY","leadService","addLead","console","log","gLeads","push","_saveToStorage","_saveLead","getLeads","filter","getSavedLists","gLeadLists","sendMsg","setLeadStatus","remove","leadId","findIndex","removedLead","splice","addInfo","txt","_getIdxById","updateLeadIdx","newIdx","PrevIdx","leadArr","saveList","newList","leadLists","sendAll","currStatus","url","forEach","setLeadsList","res","validNum","split","char","join","msg","encodeURI","window","open","newStatus","Home","setLeads","setLead","zoomUrl","setZoomUrl","setFilter","listToSave","setSavedList","setSavedLists","loadLeads","loadLists","onInputChange","useCallback","destination","source","prevIdx","location","reload","onSubmit","preventDefault","onAddLead","required","currLead","textContent","currLeads","App","component","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba76fce1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function AppHeader() {\r\n    return (\r\n        <section className=\"app-header flex align-center\">\r\n            <div className=\"logo\"><h1>Leads Manager</h1></div>\r\n            <nav className=\"flex space-around\">\r\n                <Link to='/'>home</Link>\r\n                <Link to='/editMsg'>edit messeges</Link>\r\n            </nav>\r\n        </section>\r\n    )\r\n}\r\n","\r\nexport const storageService = {\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    clearStorage\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return JSON.parse(val);\r\n}\r\n\r\nfunction clearStorage() {\r\n    localStorage.clear()\r\n}\r\n","import { storageService } from \"./storageService\";\r\n\r\nconst MSG_KEY = 'myMsgs'\r\n\r\nexport const msgService = {\r\n    getMsgTemplate,\r\n    setMsgTemplate,\r\n    createMsg\r\n}\r\n\r\nlet gTemplate = storageService.loadFromStorage(MSG_KEY) || {\r\n    check:  `אהלן {{data}}! זה מתן מקודינג אקדמי:) היום ערב ההכרות שלנו! אני אראה אותך שם?`,\r\n    invitation: `זה הלינק לערב ההכרות שמתחיל בשעה 18:00:\\n\\n {{data}} \\n\\n כדאי להכנס קצת לפני כדי לראות שאין בעיות טכניות. \\n\\n מחכה לראותך!:)`,\r\n    start: `מתחילים עוד כמה דקות! כדאי להכנס ולראות אם הכל עובד כמו שצריך:)`\r\n}\r\n\r\nfunction getMsgTemplate() {\r\n    return gTemplate;\r\n}\r\n\r\nfunction createMsg(type, data) {\r\n    return gTemplate[type].replace('{{data}}', data)\r\n}\r\n\r\nfunction setMsgTemplate(template) {\r\n    gTemplate = template\r\n    _saveToStorage()\r\n}\r\n\r\n\r\n// LOCAL FUNCTIONS\r\nfunction _saveToStorage() {\r\n    storageService.saveToStorage(MSG_KEY, gTemplate)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { msgService } from '../services/msgService'\r\n\r\nexport default function EditMsgs() {\r\n    const [msgsTemplate, setMsgsTemplate] = useState({ check: '', invitation: '', start: '' })\r\n\r\n    useEffect(() => {\r\n        const template = msgService.getMsgTemplate()\r\n        setMsgsTemplate(template)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        msgService.setMsgTemplate(msgsTemplate)\r\n    }, [msgsTemplate])\r\n\r\n    const onSetTemplate = ({ target }) => {\r\n        const { name, value } = target\r\n        setMsgsTemplate({\r\n            ...msgsTemplate,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <section className=\"edit-msg flex column space-between align-center\">\r\n            <h1>Edit Messeges</h1>\r\n            <label htmlFor=\"edit-check\">check</label>\r\n            <textarea name=\"check\" id=\"edit-check\" cols=\"20\" rows=\"10\" onChange={onSetTemplate} value={msgsTemplate.check}></textarea>\r\n            <label htmlFor=\"edit-invitation\">invitation</label>\r\n            <textarea name=\"invitation\" id=\"edit-invitation\" cols=\"230\" rows=\"10\" onChange={onSetTemplate} value={msgsTemplate.invitation}></textarea>\r\n            <label htmlFor=\"edit-start\">start</label>\r\n            <textarea name=\"start\" id=\"edit-start\" cols=\"20\" rows=\"10\" onChange={onSetTemplate} value={msgsTemplate.start}></textarea>\r\n        </section>\r\n    )\r\n}\r\n","\r\nexport function LeadFilter({ onSetFilter }) {\r\n\r\n    const handleChange = ({ target }) => {\r\n        onSetFilter({ status: target.value })\r\n    }\r\n\r\n    return (\r\n        <form className=\"lead-filter\">\r\n            <label htmlFor=\"all\">\r\n            <input type=\"radio\" name=\"status\" id=\"all\" value=\"\" onChange={handleChange} />\r\n            all\r\n            </label>\r\n            <label htmlFor=\"first\">\r\n            <input type=\"radio\" name=\"status\" id=\"first\" value=\"first-step\" onChange={handleChange} />\r\n            checked\r\n            </label>\r\n            <label htmlFor=\"second\">\r\n            <input type=\"radio\" name=\"status\" id=\"second\" value=\"second-step\" onChange={handleChange} />\r\n            invited\r\n            </label>\r\n            <label htmlFor=\"third\">\r\n            <input type=\"radio\" name=\"status\" id=\"third\" value=\"third-step\" onChange={handleChange} />\r\n            finished process\r\n            </label>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nexport function LeadPreview({ lead, onSendMsg, onDeleteLead, onAddInfo, idx }) {\r\n\r\n\r\n    return (\r\n        <Draggable draggableId={lead.id} index={idx}>\r\n            {provided => (\r\n                <li className={`lead-preview flex space-between align-center ${lead.status}`}\r\n                ref={provided.innerRef}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}>\r\n                    <h1 className=\"flex\">{lead.name} - {lead.num}</h1>\r\n                    <p suppressContentEditableWarning={true} contentEditable onInput={(ev) => onAddInfo(ev, lead.id)}>{lead.info}</p>\r\n                    <section className=\"lead-actions flex space-between\">\r\n                        {/* <div className=\"lead-action-wrapper\"> */}\r\n                            <button onClick={() => onSendMsg(lead, 'first-step')}>check</button>\r\n                            <button onClick={() => onSendMsg(lead, 'second-step')}>invitation</button>\r\n                        {/* </div> */}\r\n                        {/* <div className=\"lead-action-wrapper\"> */}\r\n                            <button onClick={() => onSendMsg(lead, 'third-step')}>start</button>\r\n                            <button onClick={() => onDeleteLead(lead.id)}>X</button>\r\n                        {/* </div> */}\r\n                    </section>\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { LeadPreview } from './LeadPreview'\r\n\r\nexport function LeadList({ leads, onSendMsg, onDeleteLead, onAddInfo, onDragEnd }) {\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId={'leadList'}>\r\n                {(provided) => (\r\n                    <ul className=\"lead-list clean-list flex column\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}>\r\n\r\n                        {\r\n                            leads.map((lead, idx) => <LeadPreview key={lead.id}\r\n                                idx={idx}\r\n                                onAddInfo={onAddInfo}\r\n                                lead={lead}\r\n                                onSendMsg={onSendMsg}\r\n                                onDeleteLead={onDeleteLead}\r\n                            ></LeadPreview>)\r\n                        }\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function LeadSavedLists({ savedLists, setCurrList }) {\r\n    const [isListOpen, setIsListOpen] = useState(false)\r\n\r\n    return (\r\n        <section className=\"saved-lists-container\">\r\n            <ul className={`lead-saved-list clean-list flex column ${isListOpen ? 'list-open' : ''}`}>\r\n                {savedLists.map((list) => <li key={list.id} onClick={() => setCurrList(list.leads)}>\r\n                    {list.title}\r\n                </li>)}\r\n            </ul>\r\n            <button className=\"saved-list-btn\" onClick={() => setIsListOpen(!isListOpen)}>my lists</button>\r\n        </section>\r\n    )\r\n}\r\n","function makeId(length=3) {\r\n    var text = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for(let i=0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport const utilService = {\r\n    makeId\r\n}","import { msgService } from \"./msgService\";\r\nimport { storageService } from \"./storageService\";\r\nimport { utilService } from \"./utilService\";\r\n\r\nconst LEAD_KEY = 'myLeads'\r\n\r\nexport const leadService = {\r\n    addLead,\r\n    getLeads,\r\n    getSavedLists,\r\n    sendMsg,\r\n    setLeadStatus,\r\n    remove,\r\n    addInfo,\r\n    updateLeadIdx,\r\n    saveList,\r\n    sendAll,\r\n    setLeadsList\r\n}\r\n\r\nvar gLeads = storageService.loadFromStorage(LEAD_KEY) || []\r\nvar gLeadLists = storageService.loadFromStorage('leadLists') || [];\r\n\r\nfunction getLeads(filter = {}) {\r\n    if (!filter.status) return gLeads;\r\n    const leads = gLeads.filter(lead => lead.status === filter.status)\r\n    return leads\r\n}\r\n \r\nfunction getSavedLists() {\r\n    return gLeadLists;\r\n}\r\n\r\nfunction addLead(lead) {\r\n    if (!lead.num || lead.num.length < 10) {\r\n        console.log('invalid num');\r\n        return\r\n    };\r\n    _saveLead(lead)\r\n}\r\n\r\nfunction sendMsg(lead, status, url) {\r\n    let validNum = _getValidNum(lead.num)\r\n    let res;\r\n    switch (status) {\r\n        case 'first-step': {\r\n            const msg = msgService.createMsg('check', lead.name)\r\n            res = encodeURI(msg);\r\n            break;\r\n        }\r\n        case 'second-step': {\r\n            const msg = msgService.createMsg('invitation', url)\r\n            res = encodeURI(msg);\r\n            break;\r\n        }\r\n        case 'third-step': {\r\n            const msg = msgService.createMsg('start')\r\n            res = encodeURI(msg);\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n    setLeadStatus(lead.id, status)\r\n    window.open(`https://wa.me/972${validNum}/?text=${res}`)\r\n}\r\n\r\n\r\nfunction setLeadStatus(leadId, newStatus) {    \r\n    const idx = _getIdxById(leadId)\r\n    gLeads[idx].status = newStatus\r\n    _saveToStorage()\r\n}\r\n\r\nfunction addInfo(txt, leadId) {\r\n    const idx = _getIdxById(leadId)\r\n    gLeads[idx].info = txt\r\n    _saveToStorage()\r\n}\r\n\r\nfunction remove(leadId) {\r\n    const idx = gLeads.findIndex(lead => lead.id === leadId)\r\n    const removedLead = gLeads.splice(idx, 1)\r\n    _saveToStorage()\r\n    return removedLead\r\n}\r\n\r\nfunction updateLeadIdx(newIdx, PrevIdx) {\r\n    const leadArr = gLeads.splice(PrevIdx, 1)\r\n    gLeads.splice(newIdx, 0, leadArr[0])\r\n    _saveToStorage()\r\n}\r\n\r\nfunction saveList(leads, title) {\r\n    const newList = {\r\n        id: utilService.makeId(4),\r\n        title,\r\n        leads\r\n    }\r\n    const leadLists = storageService.loadFromStorage('leadLists') || [];\r\n    leadLists.push(newList);\r\n    storageService.saveToStorage('leadLists', leadLists)\r\n    gLeadLists = leadLists\r\n}\r\n\r\nfunction sendAll(leads, currStatus, url) {\r\n    if (currStatus === 'first-step') currStatus = 'second-step';\r\n    else if (currStatus === 'second-step') currStatus = 'third-step';\r\n    else if (!currStatus) currStatus = 'first-step';\r\n\r\n    leads.forEach((lead) => {\r\n        sendMsg(lead, currStatus, url)\r\n    })\r\n}\r\n\r\nfunction setLeadsList(leads) {\r\n    gLeads = [...leads]\r\n}\r\n\r\n\r\n// Local Functions\r\n\r\nfunction _getValidNum(num) {\r\n    return num.split('').filter((char) => char !== '-').join('')\r\n}\r\n\r\nfunction _getIdxById(id) {\r\n    return gLeads.findIndex(lead => lead.id === id)\r\n}\r\n\r\nfunction _saveLead(lead) {\r\n    lead.id = utilService.makeId()\r\n    gLeads.push(lead)\r\n    _saveToStorage()\r\n}\r\n\r\nfunction _saveToStorage() {\r\n    storageService.saveToStorage(LEAD_KEY, gLeads)\r\n}\r\n\r\n\r\n\r\n// DEPRECATED\r\n\r\n\r\n// function sendCheckMsg(lead) {\r\n//     let validNum = _getValidNum(lead.num)\r\n//     let res = encodeURI(`אהלן ${lead.name}! זה מתן מקודינג אקדמי:) היום ערב ההכרות שלנו! את/ה מגיע/ה?`); \r\n//     window.open(`https://wa.me/972${validNum}/?text=${res}`)\r\n// }\r\n\r\n// function sendInvitation(url , num) {\r\n//     let validNum = _getValidNum(num)\r\n//     let res = encodeURI(`זה הלינק לערב ההכרות שמתחיל בשעה 18:00:\\n\\n ${url} \\n\\n כדאי להכנס קצת לפני כדי לראות שאין בעיות טכניות. \\n\\n מחכה לראותך!:)`); \r\n//     window.open(`https://wa.me/972${validNum}/?text=${res}`)\r\n// }\r\n\r\n// function sendStartMsg(num) {\r\n//     let validNum = _getValidNum(num)\r\n//     let res = encodeURI(`מתחילים עוד כמה דקות! כדאי להכנס ולראות אם הכל עובד כמו שצריך:)`); \r\n//     window.open(`https://wa.me/972${validNum}/?text=${res}`)\r\n// }","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { LeadFilter } from '../cmps/lead/LeadFilter'\r\nimport { LeadList } from '../cmps/lead/LeadList'\r\nimport LeadSavedLists from '../cmps/lead/LeadSavedList'\r\nimport { leadService } from '../services/leadService'\r\nimport { storageService } from '../services/storageService'\r\n\r\nexport function Home() {\r\n    const [leads, setLeads] = useState([])\r\n    const [lead, setLead] = useState({ name: '', num: '', status: '', info: '' })\r\n    const [zoomUrl, setZoomUrl] = useState('')\r\n    const [filter, setFilter] = useState({ status: '' })\r\n    const [listToSave, setSavedList] = useState({ title: ''})\r\n    const [savedLists, setSavedLists] = useState([])\r\n\r\n    useEffect(() => {\r\n        loadLeads()\r\n    }, [lead, filter])\r\n\r\n    useEffect(() => {\r\n        loadLists()\r\n    }, [listToSave])\r\n\r\n    const loadLeads = () => {\r\n        const leads = leadService.getLeads(filter)\r\n        setLeads([...leads])\r\n    }\r\n\r\n    const loadLists = () => {\r\n        const savedLists = leadService.getSavedLists()\r\n        setSavedLists([...savedLists])\r\n    }\r\n\r\n    const onAddLead = (ev) => {\r\n        ev.preventDefault();\r\n        leadService.addLead(lead)\r\n        setLead({ name: '', num: '' })\r\n    }\r\n\r\n    const onInputChange = ({ target }) => {\r\n        const { value, name } = target\r\n        if (name === 'list-title') setSavedList({ title: value })\r\n        setLead({\r\n            ...lead, [name]: value\r\n        })\r\n    }\r\n\r\n    const onSendMsg = (currLead, status) => {\r\n        leadService.sendMsg(currLead, status, zoomUrl)\r\n        loadLeads()\r\n    }\r\n\r\n    const onDeleteLead = (leadId) => {\r\n        leadService.remove(leadId)\r\n        loadLeads()\r\n    }\r\n\r\n    function onClearStorage() {\r\n        storageService.saveToStorage('myLeads', null)\r\n        window.location.reload();\r\n    }\r\n\r\n    const onSetZoomUrl = (ev) => {\r\n        setZoomUrl(ev.target.value)\r\n    }\r\n\r\n    const onAddInfo = (ev, leadId) => {\r\n        const txt = ev.target.textContent\r\n        leadService.addInfo(txt, leadId)\r\n    }\r\n\r\n    const onSaveList = (ev) => {\r\n        ev.preventDefault()\r\n        leadService.saveList(leads, listToSave.title)\r\n        setSavedList({ title: '' })\r\n    }\r\n\r\n    const onSetFilter = (filter) => {\r\n        setFilter(filter)\r\n    }\r\n\r\n    const onSendAll = () => {\r\n        leadService.sendAll(leads, filter.status, zoomUrl)\r\n        loadLeads()\r\n    }\r\n\r\n    const onDragEnd = useCallback((res) => {\r\n        // the only one that is required\r\n        const { destination, source } = res;\r\n        if (!destination) return\r\n        const newIdx = destination.index\r\n        const prevIdx = source.index\r\n        leadService.updateLeadIdx(newIdx, prevIdx)\r\n        loadLeads()\r\n    }, []);\r\n\r\n    const setCurrList = (currLeads) => {\r\n        leadService.setLeadsList(currLeads)\r\n        loadLeads()\r\n    }\r\n\r\n    return (\r\n        <main className=\"homepage\">\r\n            <section className=\"main-section flex column space-around align-center\">\r\n                <button className=\"clear-btn\" onClick={() => onClearStorage()}>clear storage</button>\r\n                <form className=\"main-form flex column align-center\" onSubmit={(ev) => onAddLead(ev)}>\r\n                    <h3>Add Lead</h3>\r\n                    <input type=\"text\" onChange={onInputChange} name=\"num\" value={lead.num} placeholder=\"num\" />\r\n                    <input type=\"text\" onChange={onInputChange} name=\"name\" value={lead.name} placeholder=\"name\" />\r\n                    <button>add</button>\r\n                </form>\r\n                <div className=\"zoom-wrapper\">\r\n                    <h3>Insert Url</h3>\r\n                    <input type=\"text\" placeholder=\"ZOOM url\" onChange={onSetZoomUrl} />\r\n                </div>\r\n                <form className=\"save-list-form flex column align-center\" onSubmit={onSaveList}>\r\n                    <h3>Save List</h3>\r\n                    <input type=\"text\" name=\"list-title\" placeholder=\"insert title\" onChange={onInputChange} value={listToSave.title} required />\r\n                    <button className=\"save-list-btn\">save this list</button>\r\n                </form>\r\n                <button onClick={onSendAll}>send all</button>\r\n            </section>\r\n            <section className=\"main-list\">\r\n                <div className=\"main-list-header\">\r\n                    <h2>on the list now: {leads.length}</h2>\r\n                    <LeadFilter onSetFilter={onSetFilter} />\r\n                </div>\r\n                <LeadList leads={leads} onDragEnd={onDragEnd} onSendMsg={onSendMsg} onDeleteLead={onDeleteLead} onAddInfo={onAddInfo} />\r\n            </section>\r\n            <LeadSavedLists savedLists={savedLists} setCurrList={setCurrList} />\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AppHeader from './cmps/AppHeader';\nimport EditMsgs from './pages/EditMsgs';\nimport { Home } from './pages/Home';\n\nfunction App() {\n  return (\n    <section className=\"App\">\n      <AppHeader />\n      <main className=\"\">\n        <Switch>\n          <Route component={Home} path='/' exact/>\n          <Route component={EditMsgs} to='/editMsg' />\n        </Switch>\n      </main>\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/global.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}